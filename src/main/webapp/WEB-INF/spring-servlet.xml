<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
     xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
     xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

 
  <!-- 配置Handler
  	hello.do不是瞎写的，请求*.do被拦截到，那么这个请求关联到哪个方法上，就是根据该行判断的
  	<bean name="/login.do" class="net.spring.controller.HelloWorldController" />
     -->   

<bean name="/logincheck.do" class="net.spring.controller.LoginController" />
<!-- 
配置处理器映射器
    将bean的name作为url进行查找，需要在配置Handler时指定bean name（就是url）
<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" /> 
-->
<!-- 第三步：提供了：
1.调用handler(即：controller)，说白了就是：处理请求，确定调用哪个类的哪个方法
2.对注解进行映射，找到哪个url执行哪个注解
 <mvc:resources mapping="/webapp/**/" location="/webapp/"/>
 -->
<mvc:annotation-driven/>
<mvc:default-servlet-handler/>
<!-- 在Spring配置文件中配置ViewResolver -->  
<!-- InternalResourceViewResolver：用于支持Servlet、JSP视图解析；  
     viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包；  
     prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀），  
                 比如传进来的逻辑视图名为hello，则该该jsp视图页面应该存放在“WEB-INF/hello.jsp”；   
-->  
    <bean id="viewResolver"  
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
         <property name="viewClass"  value="org.springframework.web.servlet.view.JstlView" />  
        <property name="prefix" value="/view/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean>  
</beans>
